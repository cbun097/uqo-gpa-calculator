{"version":3,"sources":["../../../src/utils/index.ts"],"names":["makeConfig","scale","transform","prop","result","Array","isArray","properties","property","fractionalValue","value","defaultValue","t","borderWidths","borderStyles","colors","borders","radii","space","spaceT","positiveOrNegative","sizes","sizesT","shadows","getIsRtl","props","theme","direction","polyfill","map","isRtl","raw","ltr","forEach","_","i","rtl","getValuesAsList","replace","split","trim","filter","Boolean","reduce","item","list","state","openParansCount","match","length","closedParansCount","parensDepth","push","handleQuartetValues","splitValues","top","right","bottom","left","join"],"mappings":"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","sourcesContent":["import { get, getWithDefault, isNumber } from \"@chakra-ui/utils\"\nimport * as CSS from \"csstype\"\nimport { PropConfig } from \"../core\"\nimport { positiveOrNegative } from \"./positive-or-negative\"\n\nexport * from \"./positive-or-negative\"\nexport * from \"./sort\"\nexport * from \"./types\"\n\nexport function makeConfig(scale: string, transform?: PropConfig[\"transform\"]) {\n  return <T extends keyof CSS.Properties>(prop: T | T[]) => {\n    const result: PropConfig = { scale }\n    if (transform) result.transform = transform\n    if (Array.isArray(prop)) result.properties = prop\n    else result.property = prop\n    return result\n  }\n}\n\nfunction fractionalValue(value: any, scale: any) {\n  const defaultValue = !isNumber(value) || value > 1 ? value : `${value * 100}%`\n  return get(scale, value, defaultValue)\n}\n\nexport const t = {\n  borderWidths: makeConfig(\"borderWidths\"),\n  borderStyles: makeConfig(\"borderStyles\"),\n  colors: makeConfig(\"colors\"),\n  borders: makeConfig(\"borders\"),\n  radii: makeConfig(\"radii\"),\n  space: makeConfig(\"space\"),\n  spaceT: makeConfig(\"space\", positiveOrNegative),\n  prop: (\n    property: keyof CSS.Properties,\n    transform?: PropConfig[\"transform\"],\n  ) => ({ property, transform }),\n  sizes: makeConfig(\"sizes\"),\n  sizesT: makeConfig(\"sizes\", fractionalValue),\n  shadows: makeConfig(\"shadows\"),\n}\n\nexport function getIsRtl(props: any) {\n  const theme = \"theme\" in props ? props.theme : props\n  return theme.direction === \"rtl\"\n}\n\n/**\n * Polyfill for border-{start|end}-radius properties.\n * We'll remove this once css logical properties is supported in major browsers\n */\nexport function polyfill<T extends keyof CSS.Properties>(map: {\n  ltr: T | T[]\n  rtl: T | T[]\n}) {\n  return (value: any, scale: any, props: any) => {\n    const isRtl = getIsRtl(props)\n    const raw = getWithDefault(value, scale)\n    const result: any = {}\n\n    if (Array.isArray(map.ltr)) {\n      map.ltr.forEach((_, i) => {\n        result[isRtl ? map.rtl[i] : map.ltr[i]] = raw\n      })\n    } else {\n      result[isRtl ? map.rtl : map.ltr] = raw\n    }\n    return result\n  }\n}\n\n/**\n * Credits to https://github.com/kentcdodds/rtl-css-js/blob/aaf3e9885026de11b01f3b73258f25e21b7432f7/src/internal/utils.js\n * @todo use this for margin, padding, border-radius value transformations in rtl\n */\nfunction getValuesAsList(value: string) {\n  return value\n    .replace(/ +/g, \" \")\n    .split(\" \")\n    .map((i) => i.trim())\n    .filter(Boolean)\n    .reduce(\n      ({ list, state }, item) => {\n        const openParansCount = (item.match(/\\(/g) || []).length\n        const closedParansCount = (item.match(/\\)/g) || []).length\n        if (state.parensDepth > 0) {\n          list[list.length - 1] = `${list[list.length - 1]} ${item}`\n        } else {\n          list.push(item)\n        }\n        state.parensDepth += openParansCount - closedParansCount\n        return { list, state }\n      },\n      { list: [], state: { parensDepth: 0 } } as any,\n    ).list\n}\n\nexport function handleQuartetValues(value: string) {\n  const splitValues = getValuesAsList(value)\n  if (splitValues.length <= 3 || splitValues.length > 4) {\n    return value\n  }\n  const [top, right, bottom, left] = splitValues\n  return [top, left, bottom, right].join(\" \")\n}\n\nexport const isRtl = (theme: any) => theme.direction === \"rtl\"\n"],"file":"index.js"}