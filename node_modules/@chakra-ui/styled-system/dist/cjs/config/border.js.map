{"version":3,"sources":["../../../src/config/border.ts"],"names":["config","border","t","borders","borderWidth","borderWidths","borderStyle","borderStyles","borderColor","colors","borderRadius","radii","borderTop","borderBlockStart","borderTopLeftRadius","borderStartStartRadius","property","scale","transform","ltr","rtl","borderEndStartRadius","borderTopRightRadius","borderStartEndRadius","borderEndEndRadius","borderRight","borderInlineEnd","borderBottom","borderBlockEnd","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderInlineStart","borderInlineStartRadius","borderInlineEndRadius","borderX","borderInline","borderY","borderBlock","borderTopWidth","borderBlockStartWidth","borderTopColor","borderBlockStartColor","borderTopStyle","borderBlockStartStyle","borderBottomWidth","borderBlockEndWidth","borderBottomColor","borderBlockEndColor","borderBottomStyle","borderBlockEndStyle","borderLeftWidth","borderInlineStartWidth","borderLeftColor","borderInlineStartColor","borderLeftStyle","borderInlineStartStyle","borderRightWidth","borderInlineEndWidth","borderRightColor","borderInlineEndColor","borderRightStyle","borderInlineEndStyle","borderTopRadius","borderBottomRadius","borderLeftRadius","borderRightRadius","Object","assign","rounded","roundedTop","roundedTopLeft","roundedTopRight","roundedTopStart","roundedTopEnd","roundedBottom","roundedBottomLeft","roundedBottomRight","roundedBottomStart","roundedBottomEnd","roundedLeft","roundedRight","roundedStart","roundedEnd","borderStart","borderEnd","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartRadius","borderEndRadius","borderStartWidth","borderEndWidth","borderStartColor","borderEndColor","borderStartStyle","borderEndStyle","borderParser"],"mappings":"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","sourcesContent":["import * as CSS from \"csstype\"\nimport { Config, createParser, system } from \"../core\"\nimport { Length, polyfill, ResponsiveValue, t } from \"../utils\"\n\nconst config: Config = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\",\n    }),\n  },\n  borderEndStartRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\",\n    }),\n  },\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\",\n    }),\n  },\n  borderEndEndRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\",\n    }),\n  },\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\",\n  },\n  borderInlineStartRadius: {\n    scale: \"radii\",\n    property: \"&\",\n    transform: polyfill({\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n    }),\n  },\n  borderInlineEndRadius: {\n    scale: \"radii\",\n    property: \"&\",\n    transform: polyfill({\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n    }),\n  },\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\n    \"borderBottomLeftRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\n    \"borderTopRightRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n}\n\nObject.assign(config, {\n  rounded: config.borderRadius,\n  roundedTop: config.borderTopRadius,\n  roundedTopLeft: config.borderTopLeftRadius,\n  roundedTopRight: config.borderTopRightRadius,\n  roundedTopStart: config.borderStartStartRadius,\n  roundedTopEnd: config.borderStartEndRadius,\n  roundedBottom: config.borderBottomRadius,\n  roundedBottomLeft: config.borderBottomLeftRadius,\n  roundedBottomRight: config.borderBottomRightRadius,\n  roundedBottomStart: config.borderEndStartRadius,\n  roundedBottomEnd: config.borderEndEndRadius,\n  roundedLeft: config.borderLeftRadius,\n  roundedRight: config.borderRightRadius,\n  roundedStart: config.borderInlineStartRadius,\n  roundedEnd: config.borderInlineEndRadius,\n  borderStart: config.borderInlineStart,\n  borderEnd: config.borderInlineEnd,\n  borderTopStartRadius: config.borderStartStartRadius,\n  borderTopEndRadius: config.borderStartEndRadius,\n  borderBottomStartRadius: config.borderEndStartRadius,\n  borderBottomEndRadius: config.borderEndEndRadius,\n  borderStartRadius: config.borderInlineStartRadius,\n  borderEndRadius: config.borderInlineEndRadius,\n  borderStartWidth: config.borderInlineStartWidth,\n  borderEndWidth: config.borderInlineEndWidth,\n  borderStartColor: config.borderInlineStartColor,\n  borderEndColor: config.borderInlineEndColor,\n  borderStartStyle: config.borderInlineStartStyle,\n  borderEndStyle: config.borderInlineEndStyle,\n})\n\n/**\n * The prop types for border properties listed above\n */\nexport interface BorderProps {\n  /**\n   * The CSS `border` property\n   */\n  border?: ResponsiveValue<CSS.Property.Border<Length>>\n  /**\n   * The CSS `border-width` property\n   */\n  borderWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  /**\n   * The CSS `border-style` property\n   */\n  borderStyle?: ResponsiveValue<CSS.Property.BorderStyle>\n  /**\n   * The CSS `border-color` property\n   */\n  borderColor?: ResponsiveValue<CSS.Property.BorderTopColor>\n  /**\n   * The CSS `border-radius` property\n   */\n  borderRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-radius` property\n   */\n  rounded?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-top` property\n   */\n  borderTop?: ResponsiveValue<CSS.Property.BorderTop<Length>>\n  borderBlockStart?: ResponsiveValue<CSS.Property.BorderBlockStart<Length>>\n  /**\n   * The CSS `border-top-width` property\n   */\n  borderTopWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderBlockStartWidth?: ResponsiveValue<\n    CSS.Property.BorderBlockStartWidth<Length>\n  >\n  /**\n   * The CSS `border-bottom-width` property\n   */\n  borderBottomWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderBlockEndWidth?: ResponsiveValue<\n    CSS.Property.BorderBlockEndWidth<Length>\n  >\n  /**\n   * The CSS `border-left-width` property\n   */\n  borderLeftWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderStartWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderInlineStartWidth?: ResponsiveValue<\n    CSS.Property.BorderInlineStartWidth<Length>\n  >\n  /**\n   * The CSS `border-right-width` property\n   */\n  borderRightWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderEndWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderInlineEndWidth?: ResponsiveValue<\n    CSS.Property.BorderInlineEndWidth<Length>\n  >\n  /**\n   * The CSS `border-top-style` property\n   */\n  borderTopStyle?: ResponsiveValue<CSS.Property.BorderTopStyle>\n  borderBlockStartStyle?: ResponsiveValue<CSS.Property.BorderBlockStartStyle>\n  /**\n   * The CSS `border-bottom-style` property\n   */\n  borderBottomStyle?: ResponsiveValue<CSS.Property.BorderBottomStyle>\n  borderBlockEndStyle?: ResponsiveValue<CSS.Property.BorderBlockEndStyle>\n  /**\n   * The CSS `border-left-style` property\n   */\n  borderLeftStyle?: ResponsiveValue<CSS.Property.BorderLeftStyle>\n  borderStartStyle?: ResponsiveValue<CSS.Property.BorderInlineStartStyle>\n  borderInlineStartStyle?: ResponsiveValue<CSS.Property.BorderInlineStartStyle>\n  /**\n   * The CSS `border-right-styles` property\n   */\n  borderRightStyle?: ResponsiveValue<CSS.Property.BorderRightStyle>\n  borderEndStyle?: ResponsiveValue<CSS.Property.BorderInlineEndStyle>\n  borderInlineEndStyle?: ResponsiveValue<CSS.Property.BorderInlineEndStyle>\n  /**\n   * The CSS `border-top-color` property\n   */\n  borderTopColor?: ResponsiveValue<CSS.Property.BorderTopColor>\n  borderBlockStartColor?: ResponsiveValue<CSS.Property.BorderBlockStartColor>\n  /**\n   * The CSS `border-bottom-color` property\n   */\n  borderBottomColor?: ResponsiveValue<CSS.Property.BorderBottomColor>\n  borderBlockEndColor?: ResponsiveValue<CSS.Property.BorderBlockEndColor>\n  /**\n   * The CSS `border-left-color` property\n   */\n  borderLeftColor?: ResponsiveValue<CSS.Property.BorderLeftColor>\n  borderStartColor?: ResponsiveValue<CSS.Property.BorderInlineStartColor>\n  borderInlineStartColor?: ResponsiveValue<CSS.Property.BorderInlineStartColor>\n  /**\n   * The CSS `border-right-color` property\n   */\n  borderRightColor?: ResponsiveValue<CSS.Property.BorderRightColor>\n  borderEndColor?: ResponsiveValue<CSS.Property.BorderInlineEndColor>\n  borderInlineEndColor?: ResponsiveValue<CSS.Property.BorderInlineEndColor>\n  /**\n   * The CSS `border-right` property\n   */\n  borderRight?: ResponsiveValue<CSS.Property.BorderRight<Length>>\n  borderEnd?: ResponsiveValue<CSS.Property.BorderInlineStart<Length>>\n  borderInlineEnd?: ResponsiveValue<CSS.Property.BorderInlineEnd<Length>>\n  /**\n   * The CSS `border-bottom` property\n   */\n  borderBottom?: ResponsiveValue<CSS.Property.BorderBottom<Length>>\n  borderBlockEnd?: ResponsiveValue<CSS.Property.BorderBlockEnd<Length>>\n  /**\n   * The CSS `border-left` property\n   */\n  borderLeft?: ResponsiveValue<CSS.Property.BorderLeft<Length>>\n  borderStart?: ResponsiveValue<CSS.Property.BorderInlineStart<Length>>\n  borderInlineStart?: ResponsiveValue<CSS.Property.BorderInlineStart<Length>>\n  /**\n   * The CSS `border-top-radius` property\n   */\n  borderTopRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-top-radius` property\n   */\n  roundedTop?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-right-radius` property\n   */\n  borderRightRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-right-radius` property\n   */\n  roundedRight?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedEnd?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `borderInlineEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderInlineEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderInlineEndRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `borderEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderEndRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  borderBottomRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  roundedBottom?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-left-radius` property\n   */\n  borderLeftRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-left-radius` property\n   */\n  roundedLeft?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedStart?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `borderInlineStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderInlineStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderInlineStartRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `borderStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderStartRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  borderTopLeftRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderTopStartRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderStartStartRadius?: ResponsiveValue<\n    CSS.Property.BorderStartStartRadius<Length>\n  >\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  roundedTopLeft?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  roundedTopStart?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  borderTopRightRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderTopEndRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderStartEndRadius?: ResponsiveValue<\n    CSS.Property.BorderStartEndRadius<Length>\n  >\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  roundedTopRight?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  roundedTopEnd?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  borderBottomLeftRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderBottomStartRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderEndStartRadius?: ResponsiveValue<\n    CSS.Property.BorderEndStartRadius<Length>\n  >\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  roundedBottomLeft?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  roundedBottomStart?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  borderBottomRightRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderBottomEndRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderEndEndRadius?: ResponsiveValue<CSS.Property.BorderEndEndRadius<Length>>\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  roundedBottomRight?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  roundedBottomEnd?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-right` and `border-left` property\n   */\n  borderX?: ResponsiveValue<CSS.Property.Border<Length>>\n  borderInline?: ResponsiveValue<CSS.Property.BorderInline<Length>>\n  /**\n   * The CSS `border-top` and `border-bottom` property\n   */\n  borderY?: ResponsiveValue<CSS.Property.Border<Length>>\n  borderBlock?: ResponsiveValue<CSS.Property.BorderBlock<Length>>\n}\n\nexport const border = system(config)\nexport const borderParser = createParser(config)\n"],"file":"border.js"}